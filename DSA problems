Problem statement 1
Check if 2 given strings are anagrams of one another
Eg. str1: bart, str2: brat
returns: True
Eg. str1: bart, str2: cart
returns: False


public class AnagramString {  
    static void isAnagram(String str1, String str2) {  
        String s1 = str1.replaceAll("\\s", "");  
        String s2 = str2.replaceAll("\\s", "");  
        boolean status = true;  
        if (s1.length() != s2.length()) {  
            status = false;  
        } else {  
            char[] ArrayS1 = s1.toLowerCase().toCharArray();  
            char[] ArrayS2 = s2.toLowerCase().toCharArray();  
            Arrays.sort(ArrayS1);  
            Arrays.sort(ArrayS2);  
            status = Arrays.equals(ArrayS1, ArrayS2);  
        }  
        if (status) {  
            System.out.println(s1 + " and " + s2 + " are anagrams");  
        } else {  
            System.out.println(s1 + " and " + s2 + " are not anagrams");  
        }  
    }  
    public static void main(String[] args) {  
        isAnagram("bart", "brat");  
    }  
}

Problem statement 2
Given a one-dimensional array representing a single lane with vehicles moving in either directions, write a function to determine how many pairs of vehicles are moving towards each other.
Input: [>, <, <, >, >] Output: 2
Input: [>, <, >, >, <] Output: 4

import java.util.Scanner;
public class Vechile {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String road = sc.nextLine();
        char[] arr = new char[road.length()];
        for (int i = 0; i < road.length(); i++) {
            arr[i] = road.charAt(i);
        }
        int pair = 0;
        for (int i = 0; i < arr.length; i++) {
            for (int j = i; j < arr.length; j++) {
                if (arr[i] == '>' && arr[j] == '<')
                    pair++;
            }
        }
        System.out.println(pair);
    }
}
